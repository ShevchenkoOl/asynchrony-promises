const start = document.querySelector('.start');
const conteiner = document.querySelector('.conteiner');
const body = document.querySelector('body');
const delay = 700;


const startGame = (evt) => {
  evt.preventDefault();
  const arrSmile = [];
  const arrDol = [];
  const childrenLength = conteiner.children.length; // –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥—ñ—Ç–µ–π –≤ –Ω–∞—à–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ
  const {
    level: { value: level },
    start,
  } = evt.currentTarget.elements; // –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞, —á—Ç–æ–±—ã –∏–∑–≤–ª–µ—á—å —Å–≤–æ–π—Å—Ç–≤–æ level –∏–∑ –æ–±—ä–µ–∫—Ç–∞ evt.currentTarget.elements. –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–≤–ª–µ–∫–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –∏—Ö –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º.–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –≤—ã—Ä–∞–∂–µ–Ω–∏–µ const {level} = evt.currentTarget.elements; –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã —Å –∏–º–µ–Ω–µ–º level –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π level.


  start.disabled = true;


  for (let i = 0; i < childrenLength; i += 1) {
    // console.log(conteiner.children[i]);
    const item = conteiner.children[i];
    item.textContent = '';
    createPromise(Number(level), 'üëå', 'üò≠', delay * i)
      .then(resp => {
        markField(item, resp);
        arrSmile.push(resp);
      })
      .catch(resp => {
        markField(item, resp);
        arrDol.push(resp);
      })
      .finally((resp) => {
        if (i === childrenLength - 1) {
          start.disabled = false;
          arrDol.push(resp);
        }
        const result =
          arrSmile.length === childrenLength ||
          arrDol.length === childrenLength;
          if (result) {
           body.innerHTML = "You are win!!!!";
        }
      });
  }
};


const isWinner = btn => {
  return arrSmile;
};

const markField = (item, smile) => {
  item.textContent = smile;
};


start.addEventListener('submit', startGame);


const createPromise = (level, win, lose, delay) => {
  const random = Math.random();
  const promise = new Promise((res, rej) => {
    setTimeout(() => {
      if (random > level) {
        res(win);
      } else {
        rej(lose);
      }
    }, delay);
  });

  return promise;
};
