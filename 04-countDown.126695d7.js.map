{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,OAErCF,EAAMG,MAAMC,QAAW,kIAQvB,IAAMC,EAAiB,SAAAC,GACrB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,EAGtCC,EACIC,OAAAC,OAAU,4CACVC,EAA0B,IAAVH,EACpBT,EAAMa,YAAcR,EAAeO,EAAgB,KACnD,IAAME,EAAKC,aAAY,WACrBN,GAAW,EACXT,EAAMa,YAAcR,EAAeI,E,GAClC,KAEHO,YAAA,WAEEhB,EAAMa,YAAc,KACpBI,cAAcH,GACdhB,EAAAoB,OAAOC,KAAK,kB,GACXP,E","sources":["src/js/04-countDown.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst timer = document.querySelector('div');\n\ntimer.style.cssText = `\n  top: 50%;\n  left: 50%;\n  position:fixed;\n  transform: translate(-50%, -50%);\n  font-size: 56px;\n  font-weight: 800; \n`;\nconst addLeadingZero = value => {\n  return value.toString().padStart(2, '0');\n};\n\n/* Обратный отчёт*/\nlet timeEnd = Number(prompt('Please enter a number for the countdown'));\nlet remainingTime = timeEnd * 1000;\ntimer.textContent = addLeadingZero(remainingTime / 1000);\nconst id = setInterval(() => {\n  timeEnd -= 1;\n  timer.textContent = addLeadingZero(timeEnd);\n}, 1000);\n\n/*после окончания обратного отчёта останавливаем функцию интервала*/\nconst id2 = setTimeout(() => {\n  timer.textContent = '00';\n  clearInterval(id);\n  Notify.info('The time is out');\n}, remainingTime);\n\n"],"names":["$h6c0i","parcelRequire","$1b7c151d8dd1058f$var$timer","document","querySelector","style","cssText","$1b7c151d8dd1058f$var$addLeadingZero","value","toString","padStart","$1b7c151d8dd1058f$var$timeEnd","Number","prompt","$1b7c151d8dd1058f$var$remainingTime","textContent","$1b7c151d8dd1058f$var$id","setInterval","setTimeout","clearInterval","Notify","info"],"version":3,"file":"04-countDown.126695d7.js.map"}